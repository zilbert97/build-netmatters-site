@import "partials/variables",
        "partials/fonts",
        "partials/keyframes",
        "partials/burger-sauce";



//=====================================
// CROSS-BROWSER FLEXBOX SUPPORT
//=====================================
// https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Mixins

// Flex containers:
@mixin flexbox {
  display: -ms-flexbox;
  display: flex;
}

@mixin inline-flex {
  display: -ms-inline-flexbox;
  display: inline-flex;
}

@mixin flex-direction($value: row) {
  -ms-flex-direction : $value;
  -moz-flex-direction: $value;         // https://caniuse.com/mdn-css_properties_flex-direction
  flex-direction     : $value;         // Not default for firefox, enabled using -moz- prefix
}

@mixin flex-wrap($value: nowrap) {
  @if $value == nowrap {
    -ms-flex-wrap: none;
  } @else {
    -ms-flex-wrap: $value;
  }
  flex-wrap      : $value;
}

@mixin flex-flow($values: (row nowrap)) {
  -ms-flex-flow: $values;
  flex-flow    : $values;
}

@mixin order($int: 0) {
  -ms-flex-order: $int;
  order         : $int;
}

@mixin justify-content($value: flex-start) {
  @if $value == flex-start {
    -ms-flex-pack: start;
  } @else if $value == flex-end {
    -ms-flex-pack: end;
  } @else if $value == space-between {
    -ms-flex-pack: justify;
  } @else if $value == space-around {
    -ms-flex-pack: distribute;
  } @else {
    -ms-flex-pack: $value;
  }
  justify-content: $value;
}

@mixin align-items($value: stretch) {
  @if $value == flex-start {
    -ms-flex-align: start;
  } @else if $value == flex-end {
    -ms-flex-align: end;
  } @else {
    -ms-flex-align: $value;
  }
  align-items     : $value;
}

// Flex items
@mixin flex-grow($int: 1) {
  -ms-flex : $int;
  flex-grow: $int;
}

@mixin flex-shrink($int: 0) {
  -ms-flex   : $int;
  flex-shrink: $int;
}

@mixin flex($f-grow: 1, $f-shrink: 0, $f-basis: auto) {
  $fg-boxflex  : $f-grow;
  @if type-of($f-grow) == 'list' {
    $fg-boxflex: nth($f-grow, 1);
  }
  -ms-flex     : $f-grow $f-shrink $f-basis;
  flex         : $f-grow $f-shrink $f-basis;
}

@mixin align-content($value: stretch) {
  @if $value == flex-start {
    -ms-flex-line-pack: start;
  } @else if $value == flex-end {
    -ms-flex-line-pack: end;
  } @else {
    -ms-flex-line-pack: $value;
  }
  align-content       : $value;
}

// align-self not used, and is not supported by IE.











//=====================================
// GLOBALS
//=====================================
// Styles and mixins applied to and
// used across the entire project

@mixin combined-ui {        // Simple mixin to combine pseudo-class selectors
  &:hover,                  // Using @mixin as cannot @extend through media queries
  &:focus,
  &:active {
    @content;
  }
}

@mixin button-base-style($service: null, $context: "body") {
  @include inline-flex;
  @include justify-content(center);
  @include align-items(center);

  box-sizing       : border-box;
  width            : max-content;

  border           : 0;
  border-radius    : $border-radius;

  color            : $primary-light;
  font-weight      : 400;
  text-align       : center;
  text-transform   : uppercase;

  vertical-align   : middle;

  .button-text,
  [class^="icon-"] {
    display        : inline-block;
    vertical-align : middle;
  }

  // I'm using the value passed to the $context parameter to set button and
  // font sizes

  @if $context == "jumbo" {
    line-height    : 50px;
    padding        : 5px 20px;
    font-size      : 1.25rem;          // 20px
    [class^="icon-"] {
      font-size    : 1.25rem;          // 20px
    }
  }
  @else if $context == "header" {
    height         : $header-button-height;  // Consistent height for header buttons
    margin-left    : 20px;             // Consistent spacing for header buttons
    padding        : 5px 15px;
    font-size      : 1.125rem;         // 18px
    [class^="icon-"] {
      font-size    : 1.4375rem;        // 23px
    }
  }
  @else if $context == "footer" {
    height         : 55px;
    width          : 100%;
    border-radius  : 0;
    [class^="icon-"] {
      font-size    : 1.75rem;          // 28px
    }
  }
  @else {                              // $context=='body' as default
    padding        : 5px 15px;
    line-height    : 35px;
    font-size      : 1.0625rem;        // 17px
  }

  // Here i'm using the value passed to the $service paramater to set other
  // styling such as color, active, focus, and hover states.

  $button-color     : null;            // Variables must be instantiated -
  $button-color-ui  : null;            // raises @warn if only defined in @else

  @if map-has-key($social-buttons-ui, $service) {
    $button-color   : $social-buttons;
    $button-color-ui: map-get($social-buttons-ui, $service);
  }
  @else if map-has-key($nm-services, $service) {
  // Consider using map-has-key() and @warn
    $button-color   : map-get($nm-services, $service);
    $button-color-ui: map-get($nm-secondary, $service);
  }
  @else if $service == "utility" {
    $button-color   : $utility-button;
    $button-color-ui: $utility-button-ui;
  }
  @else if $service == "signup" {
    $button-color   : $primary-dark;
    $button-color-ui: darken($primary-dark, 10%);
  }
  @else {
    $button-color   : $primary-light;
    $button-color-ui: #ebebeb;         // NTD: Vars
  }

  background-color  : $button-color;   // Use the values from above to set
  @include combined-ui {               // background colours
    background-color: $button-color-ui;
  }

  &:active {                           // Apply inset shadow when pressed
    box-shadow      : $button-active-shadow;
  }
  &:focus {                            // Prevent default outline of elements
    outline         : none !important;
  }
  @content;
}

//=====================================
// HEADER & JUMBOTRON LAYOUT
//=====================================
// To make the header and banner span
// the entire viewport i've placed them
// in a CSS Grid: the header takes up a
// defined amount with the jumbo taking
// up all extra space available in the
// grid's 100vh height.

.full-viewport {
  display            : grid;
  grid-template-rows : max-content auto;
  height             : 100vh;
}

body {
  font-family    : $font-stack;
  font-size      : 16px;
  letter-spacing : .4px;
  overflow       : auto;               // Prevents horizontal scroll bar in IE
}

a:hover {
  text-decoration: none;
}

h1 {
  font-size      : 3rem;
  font-weight    : 400;
  line-height    : 1.1;
  letter-spacing : .025rem;            // .4px
}

h5 {
  margin         : 0;
  font-size      : 1.125rem;
  font-weight    : 400;
  line-height    : 1.1;
}

//=====================================
// MAJOR PAGE SECTIONS
//=====================================
// Each major page section is an
// individual partial - to help with
// testing and anlysis of code

@import "partials/page-sections/header",
        "partials/page-sections/jumbotron",
        "partials/page-sections/service_cards",
        "partials/page-sections/about",
        "partials/page-sections/latest_news",
        "partials/page-sections/footer";
