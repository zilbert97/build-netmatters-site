@import "partials/variables",
        "partials/fonts",
        "partials/keyframes",
        "partials/burger-sauce",
        "partials/globals";

//=====================================
// HEADER & JUMBOTRON LAYOUT
//=====================================
// To make the header and banner span
// the entire viewport i've placed them
// in a CSS Grid: the header takes up a
// defined amount with the jumbo taking
// up all extra space available in the
// grid's 100vh height.

.full-viewport {
  display            : grid;
  grid-template-rows : max-content auto;
  height             : 100vh;

  .btn-primary {
    background-color : map-get($nm-services, 'it-support');
  }
}

//=====================================
// HEADER
//=====================================
// The header is a flex container. The
// order of flex item (containers of
// similar elements) at each breakpoint
// are as follows:
//
//         SMALL:  MEDIUM:  LARGE:  X-LARGE:
// Logo     0
// Buttons  10      (hide)   10
// Burger   30
// Search   50      20

.main-header {
  display         : flex;
  position        : relative;          // For positioning checkbox toggle relative to .main-header
  flex-flow       : row wrap;
  align-items     : center;
  justify-content : center;
  padding         : 20px 15px;
  min-height      : 168px;
}

#logo-container {
  flex           : 1 1 0;
  margin-right   : 20px;
  padding-bottom : 5px;
  a > .logo {
    max-width    : 100%;
    min-width    : 0;
  }
}

#toggle {display: none;}

#buttons-container {
  order           : 10;                // Place after logo, before burger
  display         : flex;              // Is a flex container (as well as item)
  flex-flow       : row nowrap;
  align-items     : center;
  justify-content : flex-end;

  #support-button {display: none;}
  #contact-button {display: none;}

  #voip-icon {
    width      : 70px;
    height     : auto;
    text-align : center;
    position   : relative;
    cursor     : pointer;

    hr {display: none;}

    @include combined-ui {
      hr {
        display       : block;
        position      : absolute;
        top           : 60%;
        left          : 25%;
        width         : 35px;
        border-color  : $dark-1;
        border-width  : 3px;
        margin-bottom : 12px;
      }
    }

    [class^="icon-"] {
      color     : $dark-1;
      font-size : 2rem;                // 32px
    }
  }  // #voip-icon
}  // #buttons-container

#search-container {
  margin-top : auto;
  flex-basis : 100%;    // Grow the search-container to full width, to wrap below
  order      : 50;      // Place after hamburger-container (last item)
  position   : relative;

  #search-input {
    height      : 48px;
    width       : 100%;
    padding     : 5px 40px 5px 15px;

    font-size   : .875rem;             // 14px
    line-height : 1.4;
    color       : $search-input;

    background-color : $search-background;
    border           : 2px solid $search-border;
    border-radius    : 2px;
    box-shadow       : $shadow-inset;

    &:focus {                          // At S breakpoint remove inner shadow
      box-shadow     : none;           // when focused
      outline        : 0;
    }
  }

  #search-icon {
    position : absolute;
    z-index  : 100;
    right    : 12px;
    top      : 10px;

    color      : $dark-1;
    font-style : 400;
    font-size  : 1.25rem;  // 20px
  }

  #search-button {display: none;}      // Only append to search field at wider breakpoints

}  // #search-container

#hamburger-container {
  order: 30;                           // Place after buttons-container, before search-container
  margin-left: 20px;                   // NTD: Change hover state of hamburger _burger-sauce (not ease)
}

#nav-container {display: none;}

@media (min-width: map-get($breakpoints, 'm')) {
  .main-header {
    flex-wrap  : nowrap;
    margin     : auto;
    min-height : 110px;
  }

  #logo-container {
    flex       : 0 0 auto;
    box-sizing : content-box;
    width      : 345px;
    padding    : 0 15px;
  }

  #voip-icon {display: none;}

  #search-container {
    order  : 20;                       // Place after buttons-container, before hamburger-container
    flex   : 0 0 auto;
    margin : 0 0 0 20px;

    #search-input {
      height           : $header-button-height;
      width            : 174px;  // Make set width
      background-color : $light-1;
      border-width     : 1px;
      border-radius    : 0;

      &:focus {                        // At M breakpoint and above apply a
        outline        : 0;            // blue-cyan effect
        border-color   : $field-focus-color;
        box-shadow     : $shadow-inset,
                         $shadow-outer;
      }
    }

    #search-icon {display: none;}

    #search-button {
      @include button-base-style($service: 'utility', $context: 'header') {
        width         : $header-button-sq-width;
        margin-left   : -5px;          // This ensures input & button are flush
        padding-left  : 20px;
        padding-right : 20px;
        border-radius : 0 $border-radius $border-radius 0;  // Keep button style continuous with edge of search field
      }
    }
  }  // #search-container
}  // @media(M)

@media (min-width: map-get($breakpoints, 'l')) {

  .main-header {
    width          : 970px;
    justify-content: space-between;
  }

  #logo-container {
    padding      : 0;
    margin-right : auto;
  }

  #buttons-container {
    #support-button {
      @include button-base-style($service: 'it-support', $context: 'header') {
        [class^="icon-"] {
          margin-right: 10px;
        }
      }
    }
    #contact-button {
      @include button-base-style($service: 'utility', $context: 'header') {
        [class^="icon-"] {
          margin-right: 10px;
        }
      }
    }
  }

  #search-container {
    #search-input {
      visibility    : hidden;          // Initially set to hidden for animation
      width         : 300px;           // when button pressed.
      position      : absolute;
      right         : $header-button-sq-width;  // Offset by width of the search button
      border-radius : $border-radius 0 0 $border-radius;
    }
    #search-button {
      transition    : border-radius .2s ease-out;
      border-radius : $border-radius;
      margin-left   : 0;  // Remove -5px margin
    }
  }

  // In order to target the buttons-container using a sibling selector I have
  // reversed the source order. I have then reversed this using flexbox `order`
  // and set `visibility: hidden;` to retain layout in place.

  #toggle {                            // Hidden overlay checkbox which toggles
    display  : block;                  // toggles the state of other elements.
    position : absolute;               // Positioned relative to .main-header
    right    : 98px;
    z-index  : 100;                    // Ensure toggle is the top layer

    width    : $header-button-sq-width;
    height   : $header-button-sq-width;
    opacity  : 0;                      // Hide from view
    cursor   : pointer;

    &:hover ~ #search-container > #search-button {
      background-color: $utility-button-ui;
    }
  }

  // NTD:
  // - When switching breakpoints animation occurs - ideally animation only upon UI.
  // - Uncheck toggle when click away (I think this is only possible by using JavaScript/JQuery)

  #toggle:checked ~ #search-container {
    #search-button {
      transition    : border-radius .2s ease-out .2s;     // Open up rounded corners for flush fit
      border-radius : 0 $border-radius $border-radius 0;  // with the search input field
    }
    #search-input {
      @include fade-element-in;
    }
    & ~ #buttons-container {
      @include fade-element-out;
    }
  }

  #toggle:not(:checked) ~ #search-container {
    #search-input {
      @include fade-element-out;
    }
    & ~ #buttons-container {
      @include fade-element-in;
    }
  }

  #nav-container {
    display    : block;
    height     : 99px;
    width      : 100%;

    background-color: $dark-1;
    position: relative;                // For positioning sub-navigation
  }

  #nav-inner {
    width      : 940px;
    height     : 100%;
    padding    : 0 15px;
    box-sizing : content-box;
    margin     : 0 auto;

    ul {                               // A flex container for li flex items
      display  : flex;
      flex-flow: row nowrap;
      margin   : 0;
      padding  : 0;
      height   : 100%;

      list-style : none;

      border-right: 1px solid rgba(0,0,0,.25);      // NTD: Vars
      border-left : 1px solid hsla(0,0%,100%,.1);
    }

    .nav-item {
      display  : inline-block;
      flex     : calc(100%/6) 0 0;

      border-left : 1px solid rgba(0,0,0,.25);      // NTD: Vars
      border-right: 1px solid hsla(0,0%,100%,.1);
    }

    .nav-item > a {
      display: block;
      height : 100%;
      width  : 100%;
      padding: 19px 0 18px;
    }

    span {
      display       : block;
      font-size     : 1.125rem;       // 18px
      line-height   : 1;
      text-align    : center;
      text-transform: uppercase;
      small {
        font-size   : .625rem;        // 10px
      }
    }

    .nav-item-name {
      margin-top    : 2px;
    }

    [class^=icon-] {
      font-size     : 1.4375rem;      // 23px (more specific selector)
    }

    .subnav {
      display  : none;                 // Only display on major nav hover state
      height   : 45px;
      width    : 100%;
      position : absolute;             // Positioned relative to .nav-conteiner
      left     : 0;
      bottom   : -45px;
      z-index  : 100;                  // Bring to front
      font-size: .8125rem;             // 13px

      ul {
        width  : 940px;                // Span same width as major navigation
        margin : 0 auto;
        border : none;
      }
      a {
        display         : block;
        color           : $light-1;
        line-height     : 45px;
        text-transform  : uppercase;
      }
      li ~ li > a:before {             // Add content before to all subsequent
        content         : "-";         // list items (except first)
        padding         : 0 22px;
      }
    }  // .subnav
  }  // #nav-inner

  @each $service, $color in $nm-services {
    #li-#{$service} {
      &:hover {                        // On hover change color and show subnav
        background-color   : $color;
        .subnav {
          display          : block;
          background-color : map-get($nm-secondary, $service);
        }
        [class^=icon-] {
          color            : $light-1;
        }
      }
      a:hover {
        text-decoration    : none;
      }
      .nav-item-name {
        color              : $light-1;
      }
      [class^=icon-] {
        color              : $color;
      }
    }
  }  // @each
}  // @media(L)

@media (min-width: map-get($breakpoints, 'xl')) {

  .main-header {
    width: 1200px;
  }

  #toggle {display: none;}

  #search-container {
    #search-button {
      border-radius : 0 $border-radius $border-radius 0;     // For flush flow with search box
      margin-left   : -5px;
      vertical-align: middle;
    }
    #search-input {
      visibility : visible !important;
      width      : 240px;
      position   : static;
    }
  }

  #buttons-container {
    visibility   : visible !important;
  }

  #nav-inner {
    width: 1170px;
    .subnav > ul {
      width: 1170px;
      font-size: 1rem;
    }
  }
}  // @media


//=====================================
// JUMBOTRON
//=====================================
// Jumbotron is a flex container for
// its content as well as a grid item

.jumbotron {
  position        : relative;          // For positioning owl buttons
  display         : flex;
  align-items     : center;
  justify-content : center;
  margin          : 0;

  background      : linear-gradient(to right, #000, rgba(0,0,0,.3)),
                    $dark-1 url('../img/web-design-background.jpeg') no-repeat center;
  background-size : cover;

  border-top      : 1px solid #666; // On site this is rgba(51,54,69.5) - and is lighter? NTD: check, use a variable

  color           : $light-1;
  text-align      : center;
  @media (min-width: map-get($breakpoints, 'l')) {
    text-align    : left;
  }

  .container {
    max-width     : 970px;
    @media (min-width: map-get($breakpoints, 'xl')) {
      max-width   : 1200px;
    }
  }

  h1 {
    text-transform: uppercase;
    margin-bottom : 25px;
  }
  .lead {
    line-height   : 2.25rem;
    font-weight   : 400;
    margin-bottom : 35px;
  }

  .jumbotron-button {
    @include button-base-style($service: 'web-design', $context: 'jumbo') {
      [class^="icon-"] {
        margin-left: 10px;
      }
    }
  }
}

#owl-container {
  position          : absolute;        // Position relative to the jumbotron
  text-align        : center;
  width             : 100%;
  left              : 0;
  bottom            : 40px;

  span {
    display         : inline-block;
    margin          : 0 8px;
    width           : 11px;
    height          : 11px;
    background-color: rgba(255,255,255,.5); // NTD: Var
    border-radius   : 50%;
    vertical-align  : middle;
    cursor          : pointer;
  }

  .owl-button {
    display           : inline-block;
    position          : relative;

    &:hover > span {
      background-color: #869791; // NTD: Var
    }

    span:active {
      background-color: $light-1;
      &::after {
        content       : "";
        position      : absolute;
        border-radius : 50%;
        border        : 2px solid $light-1;
        width         : 23px;
        height        : 23px;
        top           : 1px;
        right         : 2px;
      }
    }
  }  // .owl-button
}  // #owl-container


//=====================================
// NETMATTERS SERVICE CARDS
//=====================================
// Styling for each card that describes
// a specific NetMatters service

@mixin card-style($service, $color) {
  min-width   : 95%;                   // Equal width despite diff contents

  @media (min-width: map-get($breakpoints, 'm')) {
    min-width : 0;
    width     : 720px;                 // Fixed width at M breakpoint
  }

  // NTD: Surely there must be a func to eval if val in range

  // At L and XL breakpoints set fixed widths for cards 1-3 and 4-7
  $i: index(($nm-services), ($service $color));
  @media (min-width: map-get($breakpoints, 'l')) {
    @if $i==1 or $i==2 or $i==3 {
      flex-basis : 293px;
    }
    @else {
      flex-basis : 455px;
    }
  }

  @media (min-width: map-get($breakpoints, 'xl')) {
    @if $i==1 or $i==2 or $i==3 {
      flex-basis : 370px;
    }
    @else {
      flex-basis : 270px;
    }
  }

  flex-shrink : 1;                     // Prevents cards from overflowing the
                                       // flex container

  margin               : 30px 15px 0;

  border               : 1px solid $search-border;
  border-radius        : $border-radius;
  background-color     : $light-1;
  box-shadow           : $card-shadow;

  color                : $dark-1;
  line-height          : 1.5;
  letter-spacing       : .03125rem;    // .5px
  text-align           : center;

  a {
    width              : 100%;
    height             : 100%;
    padding            : 30px;
    display            : flex;
    flex-flow          : column nowrap;
    align-items        : center;
    color              : inherit;  // Override deafault <a> element styling
    text-decoration    : inherit;
  }

  [class^="icon-"] {
    display            : inline-block;
    width              : 60px;
    height             : 60px;
    margin-bottom      : 1.0625rem;    // 17px
    border-radius      : 50%;
    border-color       : $color;
    background-color   : $color;
    color              : $light-1;
    font-size          : 1.5rem;       // 24px
    line-height        : 60px;
  }

  hr {
    width              : 30px;
    margin-bottom      : 12px;
    border-color       : $dark-1;
    border-width       : 3px;
  }

  p {
    flex-grow          : 1;            // Pushes .read-more down despite content
    margin-bottom      : 13px;
    font-size          : .8125rem;     // 13px
    line-height        : 1.375rem;     // 22px
  }

  .read-more {
    display            : inline-block;
    width              : 130px;
    padding            : 10px;
    border-radius      : $border-radius;
    border-color       : $color;
    background-color   : $color;
    color              : $light-1;
    font-size          : 1.0625rem;    // 17px
    font-style         : normal;
    text-transform     : uppercase;
  }

  &:hover {
    border             : 1px solid $color;
    background-color   : $color;
    color              : $light-1;

    hr, span {
      border-color     : $light-1;
    }
    span {                             // Style both glyph and 'read more'
      background-color : $light-1;
      color            : $color;
    }
  }  // &:hover {}
}  // @mixin {}

.nm-cards {
  // Styles for the nm-cards (flex) container
  display              : flex;
  flex-flow            : column wrap;
  align-items          : center;

  @media (min-width: map-get($breakpoints, 'l')) {
    flex-flow          : row wrap;
    justify-content    : center;
    align-items        : stretch;
    align-content      : stretch;
  }

  padding              : 20px 0 50px;
  background-color     : $light-1;

  // Styles for each child (flex) item (i.e. the cards themselves)
  @each $service, $color in $nm-services {
    &-#{$service} {
      @include card-style($service, $color);
    }
  }

  // Styles for the line break
  &-break {                            // At L/XL breakpoints force line break
    display      : hidden;             // after Digital Marketing card
    @media (min-width: map-get($breakpoints, 'l')) {
      display    : inline-block;
      flex-basis : 100%;
    }
  }
}


//=====================================
// ABOUT NETMATTERS
//=====================================

#about {
  min-height       : 493px;
  padding          : 50px 0;

  background-color : $dark-1;
  @media (min-width: map-get($breakpoints, 'l')) {
    background     : $dark-1 url("../img/netmatters-logo-background.png") no-repeat 100%/auto 100%;
  }

  color            : $light-1;

  #about-wrapper {
    max-width      : 1200px;           // Set wrapper width - at XL breakpoint
    margin         : auto;             // used to position & width of children
  }

  #about-contents {
    box-sizing: content-box;
    padding          : 0 15px;

    h2 {
      margin         : -6px 0px 28px;
      font-size      : 2.25rem;        // 36px;
      font-weight    : 400;
      line-height    : 1.1;
      text-transform : uppercase;
    }

    p {
      margin-bottom  : 25px;
      line-height    : 1.875rem;       // 30px
    }

    p > strong {
      font-weight    : 600;
    }

    a {
      @include button-base-style($context: 'body') {
        color        : $dark-1;
        [class^="icon-"] {
          margin-left: 10px;
        }
      }
    }

    @media (min-width: map-get($breakpoints, 'm')) {
      width          : 720px;
      margin         : auto;           // Centered on page
    }
    @media (min-width: map-get($breakpoints, 'l')) {
      width          : 940px;
    }
    @media (min-width: map-get($breakpoints, 'xl')) {
      width          : 50%;            // Take up 50% of parent about-wrapper
      margin-left    : 0;              // Stop centering on the page
    }
  } // #about-contents
} // #about


//=====================================
// LATEST NEWS CARDS
//=====================================
// The container with all the cards in
// is a flex container.

// Each card is a flex item.

#latest-news-header {
  height     : 104px;
  width      : 100%;
  padding    : 0 15px;

  box-shadow : 0 5px 35px rgba(0,0,0,.1);    // NTD: variable
}

#latest-news-wrapper {
  margin     : 0 auto;
  max-width  : 720px;
  @media (min-width: map-get($breakpoints, 'l')) {
    max-width: 940px;
  }
  @media (min-width: map-get($breakpoints, 'xl')) {
    max-width: 1164px;
  }
}

#latest-news-label {
  display    : inline-block;
  height     : 100%;
  margin     : 0;
  padding    : 0;

  span {
    display        : block;
    padding        : 50% 0;
    color          : $dark-1;
    font-size      : 1.25rem;          // 16px
    font-weight    : 600;
    text-transform : uppercase;
  }

  hr {
    margin         : 0;
    width          : 100%;
    border-color   : $dark-1;
    border-width   : 5px;
  }
}


#news-board {
  display       : flex;
  flex-direction: column;
  flex-wrap     : nowrap;
  padding       : 35px 0;
  box-shadow    : 0 5px 35px rgba(0,0,0,.1);

  @media (min-width: map-get($breakpoints, 'm')) {
    flex-direction : row;
    justify-content: center;

    .news-card:nth-child(1n+3) {       // Hide 3rd item and all others after it (if there are any)
      display: none;
    }
  }
  @media (min-width: map-get($breakpoints, 'xl')) {
    .news-card:nth-child(1n+3) {
      display: block;
    }
  }
}

@mixin latest-card($card-category) {

  @media (min-width: map-get($breakpoints, 'm')) {
    flex: 345px 0 0;
  }
  @media (min-width: map-get($breakpoints, 'l')) {
    flex: 455px 0 0;
  }
  @media (min-width: map-get($breakpoints, 'xl')) {
    flex: 370px 0 0;
  }

  $content-color : map-get($nm-services, $card-category);

  margin        : 15px;
  overflow      : hidden;

  border        : 1px solid $search-border;   // NTD: Check color
  border-radius : $border-radius;

  .dialogue-box {
    display     : none;
  }

  .news-card-cover {
    display       : block;
    position      : relative;            // For the news-card-category to be placed on top of
    overflow      : hidden;

    .image-wrapper {
      height        : auto;
      border-bottom : 1px solid $search-border;

      .news-card-image {
        // display: block;
        width       : 100%;  // Adjusts with card size
      }
    }

    @media (min-width: map-get($breakpoints, 'l')) {
      .image-wrapper > .news-card-image {
        transition : transform .25s cubic-bezier(.215,.61,.355,1);
        transform  : scale(1);
        opacity    : 1;
      }
      .image-wrapper:hover > .news-card-image {
        transition : transform .25s cubic-bezier(.215,.61,.355,1),
                      opacity .25s cubic-bezier(.215,.61,.355,1);
        transform  : scale(1.1);
        opacity    : .75;
      }
    }

    .news-card-category {
      position : absolute;
      top      : 0;
      right    : 0;
      text-decoration: none;
      text-transform: uppercase;
      color: $light-1;
      background-color: $content-color;
      padding: 0 10px;
      top: 10px;
      font-size: .75rem;  // 12px
      line-height: 23px;
      font-weight: 600;

      &:hover {
        text-decoration: underline;
      }
    }
  }  // .news-card-cover

  .news-card-summary {
    display     : flex;
    flex-flow   : row wrap;
    align-items : center;
    padding     : 30px;

    h6, p {
      line-height : 22px;
    }

    p {
      color       : #666;                // NTD: Use a variable
      padding     : 0;
      margin      : 0;
    }

    h6 {
      flex        : 100% 1 1;
      margin      : 0 0 15px 0;
      color       : $content-color;
      font-size   : 1rem;
      font-weight : 600;
    }

    .title-link:hover {
      color: $content-color;
    }

    .card-description {
      flex        : 100% 1 1;
      margin      : 0 0 25px 0;
      font-size   : .8125rem;            // 13px
    }

    .read-more {
      flex        : auto 0 0;
      @include button-base-style($service: $card-category, $context: 'body');  // Same color as IT support buttons
    }

    hr {
      flex         : 100% 1 1;           // Be full width, can grow and shrink
      border-color : $search-border;
      margin       : 30px 0;
    }

    .card-publish-info {
      flex         : auto 1;
      padding      : 0 0 0 20px;
      font-size    : .875rem;          // 14px

      strong {
        font-weight: 600;
        color      : $dark-1;
      }
    }
    .logo-small {
      width        : 47px;
      border-radius: 50%;
    }
  }  // .news-card-summary
  @content;
}  // @mixin latest-card


#kati-25th-birthday {
  @include latest-card($card-category: 'it-support');
}

#zsea-case-study {
  @include latest-card($card-category: 'it-support');
}

#now-hiring {
  @include latest-card($card-category: 'bespoke-software');
}


//=====================================
// FOOTER
//=====================================

footer {
  color: $light-1;
  line-height: 22px;
}

.footer-subsection {                   // Hidden at S breakpoint
  display: none;
}

#main-footer {
  padding: 47px 0 43px;
  background-color: $dark-1;

  h6 {
    // display: inline;
    font-size: 1rem;
    font-weight: 400;
    text-transform: uppercase;
    margin-bottom: 26px;
  }

  a {
    color: inherit;
  }

  address, span, a {
    font-size: .8125rem;               // 13px
  }

  ul {                                 // A flex container for li flex items
    margin   : 0;
    padding  : 0;
    list-style : none;
  }
}

  // DEFAULTS:
  // justify-content: flex-start;
  // align-items: stretch;

#main-footer-wrapper {
  display: flex;
  flex-flow: column nowrap;

  .main-footer-content {
    padding: 0 15px;
  }
  .main-footer-content:nth-of-type(-n+3) {  // Apply to all flex items except last
    margin: 0 0 30px;
  }
}

@media (min-width: map-get($breakpoints, 'm')) {

  .footer-subsection {                 // Apply to clients & accreditations
    display: block;
    padding: 50px 0;
    &-inner {
      width: 750px;
      padding: 0 15px;
      margin         : 0 auto;

      display        : flex;
      flex-flow      : row nowrap;
      justify-content: center;
      align-content  : flex-start;
    }
  }

  .footer-subsection-item {
    padding: 0 20px;
    img {
      max-width: 100%;
      height: auto;
    }

    .item-color {display: none;}
    &:hover {
      .item-color {display: block}
      .item-greyscale {display: none}
    }

    #google-partner-badge {
      width: 220px;
    }
  }



  #main-footer-wrapper {
    flex-flow: row wrap;
    width: 750px;
    margin: 0 auto;
    .main-footer-content {
      width: 50%;
    }
  }
}

@media (min-width: map-get($breakpoints, 'l')) {
  .footer-subsection > .footer-subsection-inner,
  #main-footer-wrapper {
    width: 970px;
  }
}


@media (min-width: map-get($breakpoints, 'xl')) {
  .footer-subsection > .footer-subsection-inner,
  #main-footer-wrapper {
    width: 1200px;
  }

  #main-footer-wrapper {
    .main-footer-content {
      width: 25%;
    }
  }
  .footer-subsection {
    &-inner {
      justify-content: space-evenly;
    }
  }
}

// NTD: Set basis and scaling for each flex item.

// Only applies to one .main-footer-content container
#button-grid {
  display              : grid;
  grid-template-columns: auto auto;
  grid-template-rows   : 55px 55px;
  grid-gap             : 30px;

  width: 100%;  // 100% width of the parent container

  @each $key, $color in $social-buttons-ui {
    ##{$key}-button {
      @include button-base-style($service: $key, $context: 'footer');
    }
  }
}
