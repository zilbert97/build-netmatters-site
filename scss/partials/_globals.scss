//===========================
// GLOBALS
//===========================

body {
  font-family : $font-stack;
  font-size   : 16px;
}

h1 {
  font-size      : 3rem;
  font-weight    : 400;
  line-height    : 1.1;
  letter-spacing : .025rem;  // .4px
}

h5 {
  margin      : 0;
  font-size   : 1.125rem;
  font-weight : 400;
  line-height : 1.1;
}

@mixin combined-ui {        // Simple mixin to combine pseudo-class selectors
  &:hover,                  // Using @mixin as cannot @extend through media queries
  &:focus,
  &:active {
    @content;
  }
}

@mixin button-base-style($service: null, $context: 'body') {
  &:focus {                            // Prevent default outline of elements
    outline        : none !important;  // as set by the user style sheet
  }

  display          : inline-block;
  box-sizing       : border-box;
  width            : max-content;

  color            : $light-1;
  font-weight      : 400;
  letter-spacing   : .4px;
  text-align       : center;
  text-decoration  : none;
  text-transform   : uppercase;
  vertical-align   : middle;

  .button-text,
  .glyph {
    vertical-align : middle;
  }

  // Set the padding and font size for different size parameters
  @if $context == 'jumbo' {
    line-height    : 50px;
    padding        : 5px 20px;
    font-size      : 1.25rem;          // 20px
    .glyph {
      font-size    : 1.25rem;          // 20px
    }
  }
  @else if $context == 'header' {
    height         : $header-button-height;  // Consistent height for header buttons
    margin-left    : 20px;                   // Consistent spacing for header buttons
    padding        : 5px 15px;
    font-size      : 1.125rem;            // 18px
    [class^="icon-"] {
      font-size    : 1.4375rem;           // 23px
    }
  }
  @else {                                   // context == 'body' as default
    // THESE ARE PLACEHOLDERS FOR NOW
    padding        : 5px 10px;
    font-size      : 1rem;              // 16px
  }

  // Variables must be instantiated
  // (raises @warn if only defined in the @else block)
  $button-color    : null;
  $button-color-ui : null;

  @if $service == 'facebook' or
      $service == 'twitter' or
      $service == 'linkedin' {
    $button-color    : $social-buttons;
    $button-color-ui : map-get($social-buttons-ui, $service);
  }
  @else if $service != 'utility' {
    // Consider using map-has-key() and @warn
    $button-color    : map-get($nm-services, $service);
    $button-color-ui : map-get($nm-secondary, $service);
  }
  @else {
    // Default colours to utility colours
    $button-color    : $utility-button;
    $button-color-ui : $utility-button-ui;
  }

  border             : 0;
  border-radius      : $border-radius;

  background-color   : $button-color;
  @include combined-ui {
    background-color : $button-color-ui;
  }

  &:active {  // Apply inset shadow effect when button pressed
    box-shadow       : $button-active-shadow;
  }

  // FROM BOOTSTRAP = user-select: none;

  @content;
}
