//===========================
// GLOBALS
//===========================

body {
  font-family : $font-stack;
  font-size   : 16px;
}

h1 {
  font-size      : 3rem;
  font-weight    : 400;
  line-height    : 1.1;
  letter-spacing : .025rem;  // .4px
}

h5 {
  font-size   : 1.125rem;
  font-weight : 400;
}

@mixin combined-ui {        // Simple mixin to combine pseudo-class selectors
  &:hover,                  // Using @mixin as cannot @extend through media queries
  &:focus,
  &:active {
    @content;
  }
}

// .btn {
//  display: inline-block;
//  border-radius: $border-radius;
//  font-weight: 400;
//  text-align: center;
//  vertical-align: middle;
// FROM BOOTSTRAP:
//  user-select: none;
//  text-decoration: none;
//  box-sizing: border-box;
// }

/*
.button {
  display         : inline-block;
  box-sizing      : border-box;
  border-radius   : $border-radius;
  color           : $light-1;
  font-weight     : 400;
  text-transform  : uppercase;
  text-align      : center;
  text-decoration : none;
  vertical-align  : middle;
  // FROM BOOTSTRAP = user-select: none;
  &:hover {
    color: inherit;
  }
}
*/


@mixin button-base-style($service: null, $context: 'body') {
  &:focus {
    outline       : none !important;   // Prevent default outline of elements as set by the user style sheet
  }

  display         : inline-block;
  box-sizing      : border-box;
  width           : max-content;

  color           : $light-1;
  font-weight     : 400;
  letter-spacing  : .4px;
  text-transform  : uppercase;
  text-align      : center;
  text-decoration : none;
  vertical-align  : middle;

  // Set the padding and font size for different size parameters
  @if $context == 'jumbo' {
    padding       : 5px 20px;
    font-size     : 1.25rem;                // 20px
  }
  @else if $context == 'header' {
    height        : $header-button-height;  // Consistent height for header buttons
    margin-left   : 20px;                   // Consistent spacing for header buttons
    padding       : 5px 15px;
    font-size     : 1.125rem;               // 18px
  }
  @else {                                   // context == 'body' as default
    // THESE ARE PLACEHOLDERS FOR NOW
    padding       : 5px 10px;
    font-size     : 1rem;                   // 16px
  }

  // Variables must be instantiated
  // (raises @warn if only defined in the @else block)
  $button-color : null;
  $button-color-ui : null;

  @if $service == 'facebook' or
      $service == 'twitter' or
      $service == 'linkedin' {
    $button-color    : $social-buttons;
    $button-color-ui : map-get($social-buttons-ui, $service);
  }
  @else if $service != 'utility' {
    // Consider using map-has-key() and @warn
    $button-color    : map-get($nm-services, $service);
    $button-color-ui : map-get($nm-secondary, $service);
  }
  @else {
    // Default colours to utility colours
    $button-color    : $utility-button;
    $button-color-ui : $utility-button-ui;
  }

  border             : 0;
  border-radius      : $border-radius;

  background-color   : $button-color;
  @include combined-ui {
    color            : $light-1;
    background-color : $button-color-ui;
  }

  &:active {  // Apply inset shadow effect when button pressed
    box-shadow       : inset 0 3px 5px $button-shadow;
  }

  // FROM BOOTSTRAP = user-select: none;

  @content;
}
